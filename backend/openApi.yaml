openapi: "3.0.0"
info:
  title: Linked_Clone_api
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: backend server

paths:
  /users/register:
    post:
      tags:
        - user
      summary: Create new user
      requestBody:
        description: payload data
        content:
            application/json:
              schema:
                  $ref: "#/components/schemas/createPost"
  


      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/userCreated"
        "404":
          description: Email or Password is missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "409":
          description: User with same Email existed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /users/login:
    post:
      tags:
        - user
      summary: Sign in 
      requestBody:
        description: payload data
        content:
            application/json:
              schema:
                  $ref: "#/components/schemas/SignIn"
  


      responses:
        "201":
          description: User login successfully
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/Login"
        "409":
          description: Email or Password is missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: Email is not registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "200":
          description: Invalid password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /posts/posts:

    get:
      tags:
        - posts
      summary: Get all posts
      description: Get all posts
      parameters:
        - name: pageNo
          in: query
          required: true
          description: please enter generated jwt token
          schema:
            # type: query
            format: number
            example: 0-10
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/posts"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - posts
      summary: Create a new posts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/posts"
      responses:
        "201":
          description: posts created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/posts"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /posts/:
    put:
      tags:
        - "posts"
      summary: Update a posts by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/posts"
      responses:
        "200":
          description: posts updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/posts"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    delete:
      tags:
        - "posts"
      summary: Delete a posts by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: posts deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  # /auth:
components:
  schemas:
    createPost:
      type: object
      properties:
        username:
          type: string
        email:
          type: string  
        password:
          type: string
    userCreated:
     type: object
     properties:
      _id:
        type: string
      username:
        type: string
      followers:
        type: array
      following:
        type: array
      email:
        type: string
      address:
        $ref: "#/components/schemas/address"
      phone:
        type: string
      website:
        type: string
      company:
        $ref: '#/components/schemas/company'
      password:
        type: string
      
       
       
    users:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        avatar:
          type: object 
          properties: 
            public_id:
              type: string
            

    posts:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        content:
          type: string
        user_id:
          type: string
        time_stamp:
          type: string
    address:
      type: object
      properties:
        geo:
            $ref: "#/components/schemas/geo"
        street:
          type: string
        suite:
          type: string
        city:
          type: string
        zipCode:
          type: string
    geo:
      type: object
      properties:
        lat:
          type: string
        lng:
          type: string
    company:
      type: object
      properties:
        CompanyName:
          type: string
        catchPhrase:
          type: string
        bs:
          type: string
    SignIn:
       type: object
       properties:
        email:
          type: string
        password::
          type: string
    Login:
      type: object
      properties:
        success:
          type: string
        message:
          type: string
        user:
          type: object
          properties:
            email:
              type: string
        token:
          type: string      
        



      
          
    
        
       

        
  
        
